Comparing source compatibility of hash4j-0.4.0.jar against hash4j-0.3.1.jar
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.Hasher  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream hashStream()
**** MODIFIED INTERFACE: PUBLIC ABSTRACT com.dynatrace.hash4j.hashing.Hasher128  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	===* UNCHANGED INTERFACE: com.dynatrace.hash4j.hashing.Hasher64
	===* UNCHANGED INTERFACE: com.dynatrace.hash4j.hashing.Hasher32
	+++  NEW INTERFACE: com.dynatrace.hash4j.hashing.Hasher
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashValue128 hashCharsTo128Bits(java.lang.CharSequence)
**** MODIFIED INTERFACE: PUBLIC ABSTRACT com.dynatrace.hash4j.hashing.Hasher32  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW INTERFACE: com.dynatrace.hash4j.hashing.Hasher
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) int hashCharsToInt(java.lang.CharSequence)
**** MODIFIED INTERFACE: PUBLIC ABSTRACT com.dynatrace.hash4j.hashing.Hasher64  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	===* UNCHANGED INTERFACE: com.dynatrace.hash4j.hashing.Hasher32
	+++  NEW INTERFACE: com.dynatrace.hash4j.hashing.Hasher
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) long hashCharsToLong(java.lang.CharSequence)
**** MODIFIED INTERFACE: PUBLIC ABSTRACT com.dynatrace.hash4j.hashing.HashSink  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putBooleanArray(boolean[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putBooleans(boolean[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putBooleans(boolean[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putByteArray(byte[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putCharArray(char[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putChars(char[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putChars(char[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putDoubleArray(double[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putDoubles(double[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putDoubles(double[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putFloatArray(float[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putFloats(float[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putFloats(float[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putIntArray(int[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putInts(int[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putInts(int[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putLongArray(long[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putLongs(long[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putLongs(long[], int, int)
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putShortArray(short[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putShorts(short[])
	+++* NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashSink putShorts(short[], int, int)
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++* NEW INTERFACE: com.dynatrace.hash4j.hashing.HashSink
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashValue128 get()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) int getAsInt()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) long getAsLong()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) int getHashBitSize()
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream put(java.lang.Object, com.dynatrace.hash4j.hashing.HashFunnel<T>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBoolean(boolean)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBooleanArray(boolean[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBooleans(boolean[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBooleans(boolean[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putByte(byte)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putByteArray(byte[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBytes(byte[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putBytes(byte[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putChar(char)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putCharArray(char[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putChars(char[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putChars(char[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putChars(java.lang.CharSequence)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putDouble(double)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putDoubleArray(double[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putDoubles(double[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putDoubles(double[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putFloat(float)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putFloatArray(float[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putFloats(float[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putFloats(float[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putInt(int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putIntArray(int[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putInts(int[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putInts(int[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putLong(long)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putLongArray(long[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putLongs(long[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putLongs(long[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putNullable(java.lang.Object, com.dynatrace.hash4j.hashing.HashFunnel<T>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putOptional(java.util.Optional<T>, com.dynatrace.hash4j.hashing.HashFunnel<? super T>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putOptionalDouble(java.util.OptionalDouble)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putOptionalInt(java.util.OptionalInt)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putOptionalLong(java.util.OptionalLong)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putOrderedIterable(java.lang.Iterable<T>, com.dynatrace.hash4j.hashing.HashFunnel<? super T>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putShort(short)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putShortArray(short[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putShorts(short[])
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putShorts(short[], int, int)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putString(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putUnorderedIterable(java.lang.Iterable<T>, java.util.function.ToLongFunction<? super T>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putUnorderedIterable(java.lang.Iterable<T>, com.dynatrace.hash4j.hashing.HashFunnel<? super T>, java.util.function.Supplier<? extends com.dynatrace.hash4j.hashing.Hasher64>)
		GENERIC TEMPLATES: +++ T:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) com.dynatrace.hash4j.hashing.HashStream putUUID(java.util.UUID)
